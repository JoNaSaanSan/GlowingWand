#pragma once


/**
  Compute kernel between feature vector and support vector.
  Kernel type: linear
*/
float compute_kernel(float x[90], ...) {
  va_list w;
  va_start(w, x);
  float kernel = 0.0;

  for (uint16_t i = 0; i < 90; i++) {
    kernel += x[i] * va_arg(w, double);
  }

  return kernel;
}
/**
                      Predict class for features vector
*/
int predict(float *x) {
  float kernels[9] = { 0 };
  float decisions[1] = { 0 };
  int votes[2] = { 0 };
  kernels[0] = compute_kernel(x,   -0.91  , 0.62  , 0.45  , -1.53  , 0.13  , 0.66  , -1.34  , 0.18  , 0.51  , -1.15  , 0.08  , 0.54  , -0.98  , 0.09  , 0.45  , -0.9  , -0.05  , 0.34  , -0.82  , -0.31  , -0.11  , -0.75  , -0.37  , -0.53  , -0.78  , -0.4  , -0.91  , -0.52  , -0.25  , -1.26  , -0.44  , -0.2  , -1.36  , -0.38  , -0.11  , -1.22  , -0.43  , -0.08  , -1.2  , -0.45  , -0.07  , -1.2  , -0.39  , -0.11  , -1.11  , -0.26  , -0.05  , -1.2  , -0.2  , -0.17  , -1.11  , -0.32  , -0.29  , -0.86  , -0.59  , -0.39  , -0.43  , -1.12  , -0.38  , -0.16  , -1.6  , -0.29  , 0.27  , -1.75  , -0.08  , 0.72  , -1.79  , 0.04  , 0.99  , -1.41  , 0.09  , 0.86  , -1.1  , 0.01  , 0.74  , -0.85  , -0.14  , 0.6  , -0.62  , -0.41  , 0.25  , -0.71  , -0.56  , -0.62  , -0.53  , -0.47  , -1.55  , -0.01  , -0.03  , -2.0 );
  kernels[1] = compute_kernel(x,   -1.61  , -0.27  , 0.74  , -1.03  , -0.43  , 0.61  , -0.85  , -0.53  , 0.33  , -0.54  , -0.67  , -0.44  , -0.36  , -0.5  , -1.02  , -0.46  , -0.48  , -1.14  , -0.29  , -0.14  , -1.38  , -0.49  , -0.21  , -1.58  , -0.56  , -0.15  , -1.44  , -0.37  , -0.13  , -1.16  , -0.5  , -0.16  , -0.94  , -0.43  , -0.17  , -0.86  , -0.45  , -0.2  , -0.72  , -0.55  , -0.26  , -0.43  , -0.9  , -0.21  , -0.12  , -1.25  , -0.25  , 0.16  , -1.56  , -0.15  , 0.4  , -1.46  , -0.08  , 0.25  , -1.1  , -0.08  , -0.04  , -0.83  , -0.09  , -0.26  , -0.73  , -0.05  , -0.39  , -0.74  , -0.03  , -0.44  , -0.79  , -0.02  , -0.4  , -0.87  , -0.03  , -0.4  , -0.91  , -0.05  , -0.38  , -0.85  , -0.06  , -0.39  , -0.92  , -0.1  , -0.42  , -0.89  , -0.07  , -0.5  , -0.83  , -0.08  , -0.5  , -0.81  , -0.06  , -0.48 );
  kernels[2] = compute_kernel(x,   -0.88  , -0.62  , -1.31  , -1.34  , -0.36  , -1.97  , -0.7  , -0.39  , -1.8  , -0.49  , -0.19  , -1.48  , -0.29  , -0.09  , -1.01  , -0.12  , -0.07  , -1.08  , 0.02  , -0.1  , -1.09  , -0.18  , -0.21  , -0.76  , -0.64  , -0.36  , -0.29  , -1.39  , -0.36  , 0.17  , -1.92  , -0.24  , 0.51  , -1.76  , -0.15  , 0.52  , -1.23  , -0.11  , 0.06  , -0.79  , -0.05  , -0.2  , -0.66  , -0.07  , -0.41  , -0.65  , -0.05  , -0.54  , -0.71  , -0.05  , -0.6  , -0.76  , -0.08  , -0.62  , -0.81  , -0.1  , -0.52  , -0.91  , -0.1  , -0.46  , -0.93  , -0.09  , -0.52  , -0.9  , -0.12  , -0.52  , -0.85  , -0.11  , -0.51  , -0.82  , -0.08  , -0.47  , -0.83  , -0.07  , -0.42  , -0.82  , -0.08  , -0.39  , -0.87  , -0.07  , -0.42  , -0.88  , -0.07  , -0.42  , -0.83  , -0.08  , -0.45  , -0.81  , -0.08  , -0.45 );
  kernels[3] = compute_kernel(x,   -0.66  , -0.27  , -1.11  , -0.56  , -0.3  , -1.3  , -0.55  , -0.44  , -1.47  , -0.27  , -0.59  , -0.86  , -0.64  , -0.63  , -0.11  , -0.94  , -0.47  , 0.33  , -1.5  , -0.31  , 0.74  , -1.71  , -0.07  , 0.9  , -1.47  , 0.0  , 0.82  , -1.18  , 0.06  , 0.9  , -1.03  , 0.0  , 0.9  , -0.89  , -0.11  , 1.03  , -0.46  , -0.52  , 0.34  , -0.51  , -0.68  , -0.08  , -0.76  , -0.76  , -0.65  , -0.19  , -0.89  , -1.24  , -0.62  , -0.63  , -1.67  , -0.59  , -0.44  , -1.67  , -0.33  , -0.29  , -1.63  , -0.09  , -0.17  , -1.56  , -0.1  , -0.21  , -1.52  , -0.12  , -0.27  , -1.29  , -0.16  , -0.38  , -0.8  , -0.64  , -0.52  , -0.09  , -1.48  , -0.4  , 0.66  , -1.74  , -0.17  , 0.7  , -1.51  , -0.06  , 0.1  , -1.15  , -0.02  , -0.18  , -0.83  , -0.07  , -0.21  , -0.84  , -0.05  , -0.39 );
  kernels[4] = compute_kernel(x,   -1.38  , -0.23  , 0.45  , -1.58  , -0.11  , 0.49  , -1.37  , -0.08  , 0.13  , -0.99  , -0.08  , -0.2  , -0.76  , -0.06  , -0.43  , -0.69  , -0.03  , -0.54  , -0.66  , -0.03  , -0.53  , -0.71  , -0.05  , -0.48  , -0.81  , -0.04  , -0.45  , -0.84  , -0.04  , -0.48  , -0.82  , -0.07  , -0.49  , -0.83  , -0.08  , -0.54  , -0.85  , -0.07  , -0.57  , -0.84  , -0.07  , -0.53  , -0.85  , -0.08  , -0.47  , -0.89  , -0.07  , -0.43  , -0.85  , -0.06  , -0.36  , -0.85  , -0.06  , -0.36  , -0.86  , -0.06  , -0.43  , -0.84  , -0.07  , -0.47  , -0.8  , -0.07  , -0.45  , -0.84  , -0.07  , -0.48  , -0.87  , -0.08  , -0.5  , -0.86  , -0.08  , -0.49  , -0.83  , -0.09  , -0.49  , -0.85  , -0.07  , -0.5  , -0.83  , -0.07  , -0.48  , -0.83  , -0.06  , -0.46  , -0.85  , -0.06  , -0.45  , -0.84  , -0.06  , -0.4 );
  kernels[5] = compute_kernel(x,   -0.95  , -0.31  , -0.73  , -1.0  , -0.34  , -0.87  , -1.11  , -0.37  , -1.01  , -1.35  , -0.37  , -1.12  , -1.21  , -0.36  , -1.01  , -1.07  , -0.29  , -0.8  , -1.0  , -0.23  , -0.68  , -0.75  , -0.1  , -0.48  , -0.58  , -0.01  , -0.4  , -0.49  , 0.11  , -0.4  , -0.46  , 0.18  , -0.41  , -0.4  , 0.25  , -0.4  , -0.38  , 0.33  , -0.4  , -0.35  , 0.38  , -0.4  , -0.38  , 0.4  , -0.39  , -0.5  , 0.41  , -0.48  , -0.61  , 0.4  , -0.49  , -0.68  , 0.37  , -0.51  , -0.73  , 0.37  , -0.59  , -0.71  , 0.36  , -0.61  , -0.71  , 0.36  , -0.61  , -0.68  , 0.37  , -0.6  , -0.68  , 0.36  , -0.57  , -0.69  , 0.37  , -0.56  , -0.68  , 0.35  , -0.53  , -0.66  , 0.35  , -0.54  , -0.67  , 0.35  , -0.54  , -0.68  , 0.35  , -0.58  , -0.68  , 0.35  , -0.57  , -0.68  , 0.35  , -0.59 );
  kernels[6] = compute_kernel(x,   -0.89  , -0.45  , -0.69  , -1.05  , -0.52  , -0.59  , -1.46  , -0.48  , -0.64  , -1.46  , -0.42  , -0.74  , -1.44  , -0.4  , -0.66  , -1.14  , -0.39  , -0.7  , -1.03  , -0.46  , -0.64  , -1.1  , -0.43  , -0.94  , -1.28  , -0.4  , -1.11  , -1.38  , -0.37  , -1.05  , -1.4  , -0.44  , -0.82  , -1.3  , -0.46  , -0.64  , -1.13  , -0.6  , -0.51  , -1.1  , -0.5  , -0.54  , -0.86  , -0.45  , -0.53  , -0.28  , -0.47  , -0.45  , -0.65  , -0.13  , -0.49  , -0.35  , 0.08  , -0.39  , -0.38  , 0.19  , -0.34  , -0.41  , 0.28  , -0.35  , -0.37  , 0.36  , -0.38  , -0.33  , 0.41  , -0.39  , -0.33  , 0.46  , -0.39  , -0.39  , 0.49  , -0.42  , -0.46  , 0.47  , -0.45  , -0.51  , 0.46  , -0.45  , -0.6  , 0.45  , -0.53  , -0.63  , 0.43  , -0.59  , -0.66  , 0.43  , -0.6  , -0.65  , 0.44  , -0.6 );
  kernels[7] = compute_kernel(x,   -1.07  , -0.36  , -0.62  , -1.21  , -0.41  , -0.59  , -1.26  , -0.36  , -0.58  , -1.18  , -0.35  , -0.57  , -1.11  , -0.36  , -0.56  , -1.05  , -0.38  , -0.59  , -1.06  , -0.39  , -0.66  , -1.2  , -0.42  , -0.78  , -1.44  , -0.5  , -0.84  , -1.56  , -0.51  , -0.89  , -1.5  , -0.57  , -0.74  , -1.35  , -0.53  , -0.69  , -1.23  , -0.54  , -0.69  , -0.73  , -0.4  , -0.56  , -0.41  , -0.33  , -0.44  , -0.32  , -0.09  , -0.35  , -0.36  , 0.05  , -0.25  , -0.35  , 0.19  , -0.24  , -0.29  , 0.29  , -0.24  , -0.23  , 0.37  , -0.25  , -0.25  , 0.45  , -0.27  , -0.31  , 0.48  , -0.35  , -0.39  , 0.49  , -0.4  , -0.5  , 0.47  , -0.44  , -0.66  , 0.44  , -0.56  , -0.77  , 0.38  , -0.67  , -0.81  , 0.38  , -0.69  , -0.77  , 0.4  , -0.65  , -0.71  , 0.41  , -0.6  , -0.69  , 0.42  , -0.57 );
  kernels[8] = compute_kernel(x,   -0.9  , 0.52  , -0.63  , -0.79  , 0.52  , -0.74  , -0.63  , 0.54  , -0.65  , -0.49  , 0.57  , -0.55  , -0.47  , 0.57  , -0.54  , -0.5  , 0.57  , -0.49  , -0.49  , 0.58  , -0.45  , -0.53  , 0.58  , -0.45  , -0.56  , 0.57  , -0.48  , -0.57  , 0.57  , -0.51  , -0.6  , 0.56  , -0.54  , -0.61  , 0.56  , -0.56  , -0.62  , 0.54  , -0.61  , -0.63  , 0.54  , -0.58  , -0.62  , 0.55  , -0.57  , -0.62  , 0.55  , -0.49  , -0.61  , 0.56  , -0.44  , -0.6  , 0.56  , -0.44  , -0.61  , 0.56  , -0.45  , -0.6  , 0.55  , -0.49  , -0.58  , 0.55  , -0.5  , -0.6  , 0.55  , -0.53  , -0.6  , 0.55  , -0.57  , -0.59  , 0.55  , -0.53  , -0.59  , 0.55  , -0.55  , -0.6  , 0.54  , -0.54  , -0.6  , 0.55  , -0.52  , -0.6  , 0.55  , -0.52  , -0.6  , 0.55  , -0.5  , -0.59  , 0.56  , -0.49 );
  float decision = -0.051674611089;
  decision = decision - ( + kernels[0] * -0.007676337933  + kernels[1] * -0.01084915601  + kernels[2] * -0.085856309109  + kernels[3] * -0.008017937256  + kernels[4] * -0.164279530961 );
  decision = decision - ( + kernels[5] * 0.109665416129  + kernels[6] * 0.027232710704  + kernels[7] * 0.091089557587  + kernels[8] * 0.048691586849 );

  return decision > 0 ? 0 : 1;
}

/**
  Convert class idx to readable name
*/
const char* classIdxToName(uint8_t classIdx) {
  switch (classIdx) {
    case 0:
      return "nein";
    case 1:
      return "nicken";
    default:
      return "Houston we have a problem";
  }
}
